import java.util.Random;

public class Integration1 {
    private static double yesArea = 0, noArea = 0;
    private Random randy = new Random();
    private double max = 0;
    private Object lock1 = new Object();
    private Object lock2 = new Object();

    public double f(double x) {
        return Math.sin(x);
    }

    public double max() {
        for (double i = 0; i <= 1; i += 0.0001) {
            if (f(i) > max) {
                max = f(i);
            }
        }
        return Math.ceil(max);
    }
    public double Integrate(double a, double b, long simulations) {
        yesArea = 0;
        noArea = 0;
        if (a > b) {
            return Integrate(b, a, simulations);
        }
        long turns;

        for (turns = 0;turns<simulations;turns++) {
            double functionInput = randy.nextDouble();
            double areaInput = randy.nextDouble() * max();
            if (f(functionInput) >= areaInput) {
                yesArea++;
            } else {
                noArea++;
            }
        }
        return ((yesArea)/ (yesArea + noArea)) * max();
    }
    public static void main(String[] args) {
        Integration1 boi = new Integration1();
        System.out.println(boi.max());
        System.out.println(boi.Integrate(0,1,100000));

    }
}
